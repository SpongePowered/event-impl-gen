plugins {
    id "org.spongepowered.gradle.sponge.dev" version "1.1.0" apply false
    id "net.kyori.indra.publishing.sonatype" version "2.0.3"
}

// Default tasks
defaultTasks 'licenseFormat', 'build'

// Basic project information
group = "org.spongepowered"

allprojects {
    apply plugin: "org.spongepowered.gradle.sponge.dev"
    apply plugin: "net.kyori.indra.publishing"

    spongeConvention {
        repository("event-impl-gen") {
            ci = true
            publishing = true
        }
        mitLicense()

        licenseParameters {
            name = rootProject.projectName
            organization = rootProject.organization
            url = rootProject.url
        }

        sharedManifest {
            indraGit.applyVcsInformationToManifest(it)
            attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": project.url
            )
        }
    }

}

// Project dependencies
dependencies {
    implementation "fr.inria.gforge.spoon:spoon-core:8.3.0"

    implementation "org.ow2.asm:asm:9.1"

    implementation "com.google.dagger:dagger:2.33"
    annotationProcessor "com.google.dagger:dagger-compiler:2.33"

    compileOnlyApi "com.google.auto.service:auto-service-annotations:1.0-rc7"
    annotationProcessor "com.google.auto.service:auto-service:1.0-rc7"

    compileOnlyApi "org.checkerframework:checker-qual:3.11.0"
    compileOnlyApi "com.google.errorprone:error_prone_annotations:2.5.1"

    implementation project(":event-impl-gen-annotations")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")

    /* TODO: Re-enable when test is fixed
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock-module-junit4:1.6.6'
    testCompile 'org.powermock:powermock-api-mockito:1.6.6'
    */
}